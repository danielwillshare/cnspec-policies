query title: Roles should not be assigned to default service accounts
query description: Default service accounts should not be used when granting access to folders as this can violate least privilege. It is recommended to use specialized service accounts instead.

Some Google Cloud services create default service accounts when you first enable the API in a Google Cloud project. By default, these service accounts are granted the Editor role (roles/editor) on the Cloud project, which allows them to read and modify all resources in the Cloud project. This amount of access isn't essential for the services to work: To access resources in your Cloud project, Google Cloud services use service agents, not the default service accounts.

query audit: Check if  is configured to use default service accounts , , or if a  is being used



query remediation: Define a service account with least privilege for the role



query title: Users should not be granted service account access at the folder level
query description: Users with service account access at the folder level can impersonate any service account. Instead, they should be given access to particular service accounts as required.

query audit: Check if  is configured with 



query remediation: Define a custom role with least privilege



query title: Service accounts should not have roles assigned with excessive privileges
query description: Service accounts should have a minimal set of permissions assigned to accomplish their job. They should never have excessive access because if compromised, an attacker can escalate privileges and take over the entire account.

query audit: Check if  is configured with basic roles: , 



query remediation: Define a custom role with least privilege



query title: Ensure that Cloud Storage bucket is not publicly accessible
query description: Google Cloud Storage buckets that define 'allUsers' or 'allAuthenticatedUsers' as members in an IAM member/binding causes data to be exposed outside of the organization. This can lead to exposure of sensitive data. The recommended approach is to restrict public access.

query audit: Check if  is configured with  or 



query remediation: Restrict public access to the bucket.



query title: Ensure that Cloud Storage buckets have uniform bucket-level access enabled
query description: Google Cloud Storage buckets should be configured with uniform bucket-level access.

When you enable uniform bucket-level access on a bucket, Access Control Lists (ACLs) are disabled, and only bucket-level Identity and Access Management (IAM) permissions grant access to that bucket and the objects it contains. You revoke all access granted by object ACLs and the ability to administrate permissions using bucket ACLs.

query audit: Check if  is set to 



query remediation: Configure  to 



query title: Compute instances should not be publicly exposed to the internet
query description: Google Cloud compute instances that have a public IP address are exposed on the internet and are at risk to attack. 

query audit: Check if the  is empty.



query remediation: Configure compute instance without empty 



query title: Disks should be encrypted with Customer Supplied Encryption Keys
query description: Google Cloud compute instances should use disk encryption using a customer-supplied encryption key. If you do not provide an encryption key when creating the disk, then the disk will be encrypted using an automatically generated key, and you do not need to provide the key to use the disk later.

query audit: Check if  key is defined and that the arguments are not empty strings.



query remediation: Configure compute instance with  and  defined.



query title: Disk encryption Keys should not be passed as plaintext
query description: Google Cloud compute instances should use disk encryption using a customer-supplied encryption key. One of the options is for the  is , which is the key in plaintext. 

Sensitive values such as raw encryption keys should not be included in your Terraform code and should be stored securely by a secrets manager.

query audit: Check if the  is empty



query remediation: Configure compute instance with  and  defined



query title: Verify shielded VM is enabled on compute instances
query description: Shielded VMs are virtual machines (VMs) on Google Cloud hardened by a set of security controls that help defend against rootkits and bootkits. Using Shielded VMs helps protect enterprise workloads from threats like remote attacks, privilege escalation, and malicious insiders. Shielded VMs leverage advanced platform security capabilities such as secure and measured boot, a virtual trusted platform module (vTPM), UEFI firmware, and integrity monitoring.

**Secure Boot** helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails.

**Integrity monitoring** helps you understand and make decisions about the state of your VM instances. Integrity monitoring compares the most recent boot measurements to the integrity policy baseline and returns a pair of pass/fail results depending on whether they match or not, one for the early boot sequence and one for the late boot sequence.

query audit: Check if the  is configured on the instance, and if  and  are set to 



query remediation: Configure  without  and , or configure  and  explicitly to 



query title: Verify VPC flow logs enabled on compute instances
query description: VPC flow logs record information about all traffic, which is a vital tool in reviewing anomalous traffic. Google Compute Engine subnetworks that do not have VPC flow logs enabled have limited information for auditing and awareness.

Note: Google Compute Engine subnets configured as INTERNAL_HTTPS_LOAD_BALANCER do not support VPC flow logs. Compute subnetworks with  attribute will not be evaluated.

query audit: The following example will fail:



query remediation: The following example will pass:



query title: Compute instances should not use the default service account
query description: The default service account has full project access. Provisioning instances using the default service account gives the instance full access to the project. Compute instances should instead be assigned the minimal access they need.

query audit: The following example will fail:



query remediation: The following example will pass:



query title: Compute instances should be configured with IP forwarding
query description: Disabling IP forwarding ensures the instance can only receive packets addressed to the instance and can only send packets with a source address of the instance.

The attribute  is optional on  and defaults to . Instances with  will fail. 

query audit: The following example will fail:



query remediation: The following example will pass:



query title: VM disk encryption keys should not be provided in plaintext
query description: Providing your encryption key in plaintext format means anyone with access to the source code also has access to the key.

When encrypting a , it is not recommended to use the  argument as this passes the key in plaintext, which is not secure. Consider using  or a secrets manager instead. 

query audit: The following example will fail:



query remediation: The following example will pass:



query title: BigQuery datasets should only be accessible within the organization
query description: BigQuery datasets should not be configured to provide access to  as this provides any authenticated GCP user, even those outside of your organization, access to your BigQuery dataset. This can lead to exposure of sensitive data to the public internet.

Configure access permissions with higher granularity and least privilege principles.

query audit: The following example will fail:



query remediation: The following example will pass:



query title: Cloud DNS should use DNSSEC
query description: DNSSEC authenticates DNS responses, preventing MITM attacks and impersonation. Unverified DNS responses could lead to man-in-the-middle attacks. 

query audit: The following example will fail:



query remediation: The following example will pass:



query title: Zone signing should not use RSA SHA1
query description: RSA SHA1 is a weaker algorithm than SHA2-based algorithms such as RSA SHA256/512. 

query audit: The following example will fail:



query remediation: The following example will pass:



query title: Kubernetes should have 'Automatic repair' enabled
query description: Automatic repair will monitor nodes and attempt repair when a node fails multiple subsequent health checks. Failing nodes will require manual repair.

query audit: The following example will fail:



query remediation: The following example will pass:



query title: Kubernetes should have 'Automatic upgrade' enabled
query description: Automatic updates keep nodes updated with the latest cluster master version.

query audit: The following example will fail:



query remediation: The following example will pass:



query title: Clusters should have IP aliasing enabled
query description: IP aliasing allows the reuse of public IPs internally, removing the need for a NAT gateway.

query audit: The following example will fail:



query remediation: The following example will pass:



query title: Master authorized networks should be configured on GKE clusters
query description: Enabling authorized networks means you can restrict master access to a fixed set of CIDR ranges.

query audit: The following example will fail:



query remediation: The following example will pass:



query title: Network Policy should be enabled on GKE clusters
query description: Enabling a network policy allows the segregation of network traffic by namespace.

query audit: The following example will fail:



query remediation: The following example will pass:



query title: Clusters should be set to private
query description: Enabling private nodes on a cluster ensures the nodes are only available internally as they will only be assigned internal addresses.

query audit: The following example will fail:



query remediation: The following example will pass:



query title: Stackdriver Logging should be enabled
query description: StackDriver logging provides a useful interface to all of stdout/stderr for each container and should be enabled for monitoring, debugging, etc. Without Stackdriver, visibility to the cluster will be reduced.

query audit: The following example will fail:



query remediation: The following example will pass:



query title: Stackdriver Monitoring should be enabled
query description: StackDriver monitoring aggregates logs, events, and metrics from your Kubernetes environment on GKE to help you understand your application's behavior in production.

query audit: The following example will fail:



query remediation: The following example will pass:



query title: Legacy metadata endpoints enabled
query description: The Compute Engine instance metadata server exposes legacy v0.1 and v1beta1 endpoints, which do not enforce metadata query headers. This is a feature in the v1 APIs that makes it more difficult for a potential attacker to retrieve instance metadata. Unless specifically required, we recommend you disable these legacy APIs. When setting the  block, the default value for  is set to , they should not be explicitly enabled.

query audit: The following example will fail:



query remediation: The following example will pass:



query title: Clusters should not use client certificates for authentication
query description: There are several methods of authenticating to the Kubernetes API server. In GKE, the supported methods are service account bearer tokens, OAuth tokens, and x509 client certificates. Prior to GKE's integration with OAuth, a one-time generated x509 certificate or static password were the only available authentication methods, but are now not recommended and should be disabled. These methods present a wider surface of attack for cluster compromise and have been disabled by default since GKE version 1.12. If you are using legacy authentication methods, we recommend that you turn them off. Authentication with a static password is deprecated and has been removed since GKE version 1.19.

Existing clusters should move to OAuth.

query audit: The following example will fail due to the  block that includes the  configuration which is set to  by default:



query remediation: The following example will pass since the  block is not specified and secure defaults are used instead:



query title: Clusters should not use basic authentication
query description: There are several methods of authenticating to the Kubernetes API server. In GKE, the supported methods are service account bearer tokens, OAuth tokens, and x509 client certificates. Prior to GKE's integration with OAuth, a one-time generated x509 certificate or static password were the only available authentication methods, but are now not recommended and should be disabled. These methods present a wider surface of attack for cluster compromise and have been disabled by default since GKE version 1.12. If you are using legacy authentication methods, we recommend that you turn them off. Authentication with a static password is deprecated and has been removed since GKE version 1.19.

Existing clusters should move to OAuth.

query audit: The following example will fail due to the  block that includes the  and  configuration which is set to a value other than :



query remediation: The following example will pass since the  block is not specified and secure defaults are used instead:



query title: GKE Control Plane should not be publicly accessible
query description: Authorized networks allow you to specify CIDR ranges and allow IP addresses in those ranges to access your cluster control plane endpoint using HTTPS. Exposing the Kubernetes control plane to the public internet by specifying a CIDR block of "0.0.0.0/0" is not recommended. Public clusters can have up to 50 authorized network CIDR ranges; private clusters can have up to 100.

query audit: The following example will fail due to the  block that specifies  which is publicly accessible:



query remediation: The following example will pass since the  block configures an internal :



query title: Node metadata value disables metadata concealment
query description: GKE metadata concealment protects some potentially sensitive system metadata from user workloads running on your cluster. Metadata concealment is scheduled to be deprecated in the future and Google recommends using Workload Identity instead of metadata concealment. This check is looking for configuration that exposes metadata completely. 

query audit: The following example will fail due to the  block that specifies :



query remediation: The following example will pass due to the  block that specifies  (recommended): 



query title: Ensure Container-Optimized OS (cos) is used for Kubernetes Engine Clusters Node image
query description: GKE supports several OS image types but COS_CONTAINERD is the recommended OS image to use on cluster nodes for enhanced security. COS_CONTAINERD is the recommended OS image to use on cluster nodes. 

query audit: The following example will fail due to the  block that specifies :



query remediation: The following example will pass due to the  block that specifies  (recommended): 



query title: Shielded GKE nodes not enabled
query description: Node identity and integrity can't be verified without shielded GKE nodes. CIS GKE Benchmark Recommendation: 6.5.5. Shielded GKE Nodes provide strong, verifiable node identity and integrity to increase the security of GKE nodes and should be enabled on all GKE clusters.

 is an optional argument and is set to  by default, and should not be set to .

query audit: The following example will fail due to the  is set to : 



query remediation: The following example will pass due to the  is set to : 



query title: Clusters should be configured with Labels
query description: Cluster labels are key-value pairs that helps you organize your Google Cloud clusters. You can attach a label to each resource, then filter the resources based on their labels. Information about labels is forwarded to the billing system, so you can break down your billed charges by label.

The  argument is optional when using the  resource. 

query audit: The following example will fail because the  argument is not defined for the cluster: 



query remediation: The following example will pass because the  argument is defined for the cluster: 



query title: Legacy ABAC permissions are enabled
query description: By default, ABAC is disabled for clusters created using GKE version 1.8 and later. In Kubernetes, RBAC is used to grant permissions to resources at the cluster and namespace level. RBAC allows you to define roles with rules containing a set of permissions. RBAC has significant security advantages over ABAC.

The  is set to  by default. 

query audit: The following example will fail because the  argument is set to : 



query remediation: The following example will pass because the  argument is explicitly set to  (omitting the argument will also pass):



query title: Checks for service account defined for GKE nodes
query description: Each GKE node has an Identity and Access Management (IAM) Service Account associated with it. By default, nodes are given the Compute Engine default service account, which you can find by navigating to the IAM section of the Cloud Console. This account has broad access by default, making it useful to wide variety of applications, but it has more permissions than are required to run your Kubernetes Engine cluster. You should create and use a minimally privileged service account for your nodes to use instead of the Compute Engine default service account.

query audit: The following example will fail because the  block does not contain a  argument: 



query remediation: The following example will pass because the  block contains a  argument: 



policy description: ## Overview

This checks for security misconfigurations in Terraform HCL for Google Cloud. 

## Local scan

Local scan refer to scans of files and operating systems where  is installed.

### Scan a Terraform project

Open a terminal and run the following command:  



## Join the community!

Our goal is to build policies that are simple to deploy, accurate, and actionable. 

If you have any suggestions on how to improve this policy, or if you need support, [join the community](https://github.com/orgs/mondoohq/discussions) in GitHub Discussions. 

group summary: GCP BigQuery
group summary: GCP Identity and Access Management (IAM)
group summary: GCP Cloud Storage
group summary: GCP Compute
group summary: GCP DNS
group summary: GCP Google Kubernetes Engine (GKE)
